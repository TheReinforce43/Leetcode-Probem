class Solution {
public:
    
    int helper(vector<int>cost,vector<int>&dp,int i,int n)
    {
        if(i>n) return 0;
        if(dp[i]!=-1) return dp[i];
        int ans1=helper(cost,dp,i+1,n);
        int ans2=helper(cost,dp,i+2,n);
        return dp[i]=cost[i]+min(ans1,ans2);
    }
    int minCostClimbingStairs(vector<int>& cost) {
       vector<int> dp(cost.size(),-1);
       int ans1=helper(cost,dp,0,cost.size()-1);
       int ans2=helper(cost,dp,1,cost.size()-1);
       return min(ans1,ans2);
    }
};
